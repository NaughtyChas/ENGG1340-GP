name: Build Windows EXE

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: ['**']

jobs:
  build-windows:
    if: github.event_name != 'pull_request' || !github.event.pull_request.draft
    name: Build Windows Executable
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-ncurses
          mingw-w64-x86_64-ncurses-devel
          make
          
    - name: Create compatibility layer for ncurses
      shell: msys2 {0}
      run: |
        mkdir -p ~/local/include ~/local/lib
        
        echo "Creating symbolic links for ncurses headers..."
        cp -r /mingw64/include/ncurses* ~/local/include/
        
        if [ ! -f ~/local/include/ncurses.h ]; then
          echo "#include <ncursesw/ncurses.h>" > ~/local/include/ncurses.h
          echo "Created compatibility ncurses.h header"
        fi
        
        echo "Copying ncurses libraries..."
        cp -r /mingw64/lib/libncursesw* ~/local/lib/
        ln -sf ~/local/lib/libncursesw.a ~/local/lib/libncurses.a
        ln -sf ~/local/lib/libncursesw.dll.a ~/local/lib/libncurses.dll.a
        
        echo "Checking compatibility layer..."
        ls -la ~/local/include/
        ls -la ~/local/lib/
        
    - name: Fix Makefile 
      shell: msys2 {0}
      run: |
        echo "Removing calls to installNcurses.sh from Makefile..."
        cp Makefile Makefile.bak
        sed -i '/installNcurses.sh/d' Makefile
        
        echo "Updating Makefile for Windows target..."
        sed -i 's/$(BIN_DIR)\\\\main/$(BIN_DIR)\\\\main.exe/g' Makefile
        
        echo "Updating Makefile to use ncursesw library..."
        sed -i 's/-lncurses/-lncursesw/g' Makefile
        
        echo "Modified Makefile:"
        cat Makefile
    
    - name: Create build directories
      shell: msys2 {0}
      run: mkdir -p bin build
      
    - name: Build application
      shell: msys2 {0}
      run: |
        echo "Building application..."
        make
      
    - name: Package executable with dependencies
      shell: msys2 {0}
      run: |
        if [ -f bin/main.exe ]; then
          mkdir -p package
          cp bin/main.exe package/game.exe
          cp /mingw64/bin/libncursesw*.dll package/
          cp /mingw64/bin/libgcc_s_seh-1.dll package/
          cp /mingw64/bin/libstdc++-6.dll package/
          cp /mingw64/bin/libwinpthread-1.dll package/
          cp /mingw64/bin/libiconv*.dll package/
          cp /mingw64/bin/libintl*.dll package/
          echo "Package created successfully!"
        else
          echo "Error: Executable not found!"
          ls -la bin/
          exit 1
        fi
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-game-executable
        path: package/
        retention-days: 14
        if-no-files-found: error